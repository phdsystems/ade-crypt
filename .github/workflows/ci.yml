name: ADE crypt CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Run ShellCheck
      run: ./scripts/lint.sh

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bats openssl gnupg tar gzip
        
    - name: Run tests
      run: ./scripts/test.sh
      env:
        CI: true
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}
        path: test-results/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: security-scan.sarif
      continue-on-error: true

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openssl gnupg tar gzip bats
        
    - name: Test installation
      run: |
        # Test local installation
        ./install.sh || echo "Install script needs sudo, testing components instead"
        
        # Test main executable
        ./ade-crypt version
        ./ade-crypt help
        
    - name: Test basic operations
      run: |
        # Create test file
        echo "integration test data" > test-file.txt
        
        # Test encryption/decryption
        ./ade-crypt encrypt file test-file.txt
        rm test-file.txt
        ./ade-crypt decrypt file test-file.txt.enc
        
        # Verify content
        grep -q "integration test data" test-file.txt
        
    - name: Test secret operations
      run: |
        # Test secret storage
        echo "test-secret-value" | ./ade-crypt secrets store integration-test
        
        # Test secret retrieval
        secret=$(./ade-crypt secrets get integration-test)
        if [ "$secret" != "test-secret-value" ]; then
          echo "Secret mismatch: expected 'test-secret-value', got '$secret'"
          exit 1
        fi
        
    - name: Test export functionality
      run: |
        # Test export formats
        ./ade-crypt export export json > secrets.json
        ./ade-crypt export export yaml > secrets.yaml
        ./ade-crypt export export env > secrets.env
        
        # Verify files created
        test -f secrets.json
        test -f secrets.yaml  
        test -f secrets.env

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint, test, integration]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create release package
      run: |
        # Create release directory
        mkdir -p release/ade-crypt
        
        # Copy necessary files
        cp -r src docs scripts tests ade-crypt install.sh LICENSE README.md Makefile release/ade-crypt/
        
        # Create tarball
        cd release
        tar czf ade-crypt-$(date +%Y%m%d-%H%M%S).tar.gz ade-crypt/
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: release/*.tar.gz